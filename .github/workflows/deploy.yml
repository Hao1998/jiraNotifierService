name: Deploy Jira Plugin to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push complete image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/jira-plugin:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            ECR_REGISTRY="${{ steps.login-ecr.outputs.registry }}"
            IMAGE_URI="${ECR_REGISTRY}/jira-plugin:latest"
            
            # Login to ECR
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY
            
            # Pull and run container
            docker pull $IMAGE_URI
            docker stop jira-plugin || true
            docker rm jira-plugin || true
            docker run -d --name jira-plugin -p 8080:8080 --restart unless-stopped $IMAGE_URI
            
            # Health check
            sleep 10
            if docker ps | grep -q jira-plugin; then
              echo "✅ Container started successfully"
            else
              echo "❌ Container failed to start"
              docker logs jira-plugin
              exit 1
            fi