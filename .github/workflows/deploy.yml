name: Deploy Jira Plugin to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push complete image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/myplugin:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            ECR_REGISTRY="${{ steps.login-ecr.outputs.registry }}"
            IMAGE_URI="$ECR_REGISTRY/myplugin:latest"

            echo "üîç Starting deployment..."
            echo "Registry: $ECR_REGISTRY"
            echo "Image: $IMAGE_URI"

            echo "üîê Logging into ECR..."
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY

            echo "üì• Pulling image..."
            docker pull $IMAGE_URI

            echo "üõë Stopping existing container..."
            docker stop myplugin || true
            docker rm myplugin || true

            echo "üöÄ Starting new container..."
            docker run -d --name myplugin -p 8080:8080 --restart unless-stopped $IMAGE_URI

            echo "‚è≥ Waiting for container to start..."
            sleep 10

            if docker ps | grep -q myplugin; then
              echo "‚úÖ Container started successfully"
              docker ps | grep myplugin
            else
              echo "‚ùå Container failed to start"
              docker logs myplugin
              exit 1
            fi